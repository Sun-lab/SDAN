library(data.table)
library(readxl)
library(Matrix)
install.packages("readxl")
library(data.table)
library(readxl)
library(Matrix)
cell_type = "cd4"
args = commandArgs(trailingOnly=TRUE)
args
for(i in 1:length(args)){
eval(parse(text=args[[i]]))
}
cell_type
data_dir = "~/research/data/COVID/Su_2020"
finfo = fread("ArrayExpress/file_info.csv")
dim(finfo)
table(finfo$disease)
finfo = finfo[which(finfo$disease == "COVID-19"),]
dim(finfo)
table(finfo$disease)
finfo[1:2,]
table(finfo$sampling_time_point)
finfo = finfo[which(finfo$sampling_time_point == "BL"),]
dim(finfo)
table(finfo$disease)
pro_dat = gex_dat = NULL
cell_info = NULL
for(i in 1:nrow(finfo)){
cat(i, date(), "\n")
dir_ct  = paste0(cell_type, "_tcr_dir")
file_ct = paste0(cell_type, "_tcr_file")
tcr_dir  = gsub(".zip", "", finfo[[dir_ct]][i], fixed = TRUE)
tcr_file = finfo[[file_ct]][i]
tcr_dat  = fread(file.path(data_dir, tcr_dir, tcr_file))
dim(tcr_dat)
tcr_dat[1:2,]
cell = tcr_dat$V1
pro_dir  = gsub(".zip", "", finfo$pro_dir[i], fixed = TRUE)
pro_file = finfo$pro_file[i]
pro = fread(file.path(data_dir, pro_dir, pro_file))
dim(pro)
pro[1:3,1:2]
stopifnot(all(cell %in% pro$V1))
gex_dir  = gsub(".zip", "", finfo$gex_dir[i], fixed = TRUE)
gex_file = finfo$gex_file[i]
gex = fread(file.path(data_dir, gex_dir, gex_file))
dim(gex)
gex[1:3,1:2]
stopifnot(all(cell %in% gex$V1))
tcr_dat[,':='(individual=finfo$individual[i],
time_point=finfo$sampling_time_point[i])]
cell_info = rbind(cell_info,
tcr_dat[,.(V1, chain_pairing, clonotype,
clonotype_size, clonal_expansion,
individual, time_point)])
pro_idx = match(cell, pro$V1)
gex_idx = match(cell, gex$V1)
if(i == 1){
pro_names = names(pro)
gex_names = names(gex)
}else{
stopifnot(all(pro_names == names(pro)))
stopifnot(all(gex_names == names(gex)))
}
pro_i = pro[pro_idx,]
gex_i = gex[gex_idx,]
stopifnot(all(pro_i$V1 == gex_i$V1))
gex_i[,V1:=NULL]
gex_i = as(data.matrix(gex_i), "sparseMatrix")
pro_dat = rbind(pro_dat, pro_i)
gex_dat = rbind(gex_dat, gex_i)
}
source("XIMCOR.R")
library(MASS)
library(independence)
library(TauStar)
library(ggplot2)
library(XICOR)
library(gridExtra)
library(dplyr)
# Table1 + Table2
# Revised Chatterjeeâ€™s
XIMpower<-function(n,M,rho){
ntime<-1000
B<-10000
alpha<-0.05
nrej<-0
time.compute<-0
coef.sim<-XIMsim(n,M,B)
mu<-c(0,0)
Sigma<-matrix(c(1,rho/sqrt(n),rho/sqrt(n),1),2,2)
for (time in 1:ntime){
mysample<-mvrnorm(n,mu,Sigma)
xvec <- mysample[,1]
yvec <- mysample[,2]
time.start<-Sys.time()
coef.stat <- XIMstat(xvec,yvec,M)
time.end<-Sys.time()
time.compute<-time.compute+(time.end-time.start)
nrej <- nrej + XIMtestT(coef.stat,coef.sim,alpha)
}
return(data.frame(n=n,M=M,rho=rho,rej=nrej/ntime,time=time.compute/ntime))
}
result<-NULL
for (n in c(1000,2000,5000)){
for (M in c(n/2,n-1)){
for (rho in c(0,1,2,5,10)){
set.seed(123)
result<-rbind(result,XIMpower(n,M,rho))
print(paste(n,M,rho,"complete"))
}
}
}
library(data.table)
library(readxl)
library(Matrix)
library(tidyr)
library(ggplot2)
theme_set(theme_classic())
# cell_type = "cd4"
args = commandArgs(trailingOnly=TRUE)
args
for(i in 1:length(args)){
eval(parse(text=args[[i]]))
}
cell_type
data_dir = "../../aTCR_large_files/Su_2020"
finfo = fread("ArrayExpress/file_info.csv")
dim(finfo)
table(finfo$disease)
finfo = finfo[which(finfo$disease == "COVID-19"),]
dim(finfo)
table(finfo$disease)
table(finfo$sampling_time_point)
finfo = finfo[which(finfo$sampling_time_point == "BL"),]
dim(finfo)
table(finfo$disease)
gex_dat = gex_sub = NULL
cell_info = NULL
genes2check = c("CD3E", "CD3D", "CD3G", "CD8A", "GZMK", "CD4",
"CD19", "CD79A", "IGLV2-8", "IGHV1-2", "IGHV2-5")
cell_type = "cd4"
args = commandArgs(trailingOnly=TRUE)
args
for(i in 1:length(args)){
eval(parse(text=args[[i]]))
}
cell_type
data_dir = "../../aTCR_large_files/Su_2020"
finfo = fread("ArrayExpress/file_info.csv")
dim(finfo)
table(finfo$disease)
finfo = finfo[which(finfo$disease == "COVID-19"),]
dim(finfo)
table(finfo$disease)
finfo[1:2,]
table(finfo$sampling_time_point)
finfo = finfo[which(finfo$sampling_time_point == "BL"),]
dim(finfo)
table(finfo$disease)
gex_dat = gex_sub = NULL
cell_info = NULL
genes2check = c("CD3E", "CD3D", "CD3G", "CD8A", "GZMK", "CD4",
"CD19", "CD79A", "IGLV2-8", "IGHV1-2", "IGHV2-5")
for(i in 1:nrow(finfo)){
cat(i, date(), "\n")
dir_ct  = paste0(cell_type, "_tcr_dir")
file_ct = paste0(cell_type, "_tcr_file")
tcr_dir  = gsub(".zip", "", finfo[[dir_ct]][i], fixed = TRUE)
tcr_file = finfo[[file_ct]][i]
tcr_dat  = fread(file.path(data_dir, tcr_dir, tcr_file))
dim(tcr_dat)
tcr_dat[1:2,]
cell = tcr_dat$V1
gex_dir  = gsub(".zip", "", finfo$gex_dir[i], fixed = TRUE)
gex_file = finfo$gex_file[i]
gex = fread(file.path(data_dir, gex_dir, gex_file))
dim(gex)
gex[1:3,1:2]
stopifnot(all(cell %in% gex$V1))
tcr_dat[,':='(individual=finfo$individual[i],
time_point=finfo$sampling_time_point[i])]
cell_info = rbind(cell_info,
tcr_dat[,.(V1, chain_pairing, clonotype,
clonotype_size, clonal_expansion,
individual, time_point)])
gex_idx = match(cell, gex$V1)
if(i == 1){
gex_names = names(gex)
}else{
stopifnot(all(gex_names == names(gex)))
}
gex_i = gex[gex_idx,]
gex_i[,V1:=NULL]
stopifnot(all(genes2check %in% names(gex_i)))
gex_sub = rbind(gex_sub, data.matrix(gex_i[,..genes2check]))
gex_i = as(data.matrix(gex_i), "sparseMatrix")
gex_dat = rbind(gex_dat, gex_i)
}
library(data.table)
library(readxl)
library(Matrix)
library(tidyr)
library(ggplot2)
theme_set(theme_classic())
cell_typ = "cd4"
args = commandArgs(trailingOnly=TRUE)
args
for(i in 1:length(args)){
eval(parse(text=args[[i]]))
}
cell_type
data_dir = "../../aTCR_large_files/Su_2020"
# ------------------------------------------------------------------------
# read in file information
# ------------------------------------------------------------------------
finfo = fread("ArrayExpress/file_info.csv")
dim(finfo)
table(finfo$disease)
finfo = finfo[which(finfo$disease == "COVID-19"),]
dim(finfo)
table(finfo$disease)
finfo[1:2,]
table(finfo$sampling_time_point)
finfo = finfo[which(finfo$sampling_time_point == "BL"),]
dim(finfo)
table(finfo$disease)
gex_dat = gex_sub = NULL
cell_info = NULL
genes2check = c("CD3E", "CD3D", "CD3G", "CD8A", "GZMK", "CD4",
"CD19", "CD79A", "IGLV2-8", "IGHV1-2", "IGHV2-5")
for(i in 1:nrow(finfo)){
cat(i, date(), "\n")
dir_ct  = paste0(cell_type, "_tcr_dir")
file_ct = paste0(cell_type, "_tcr_file")
tcr_dir  = gsub(".zip", "", finfo[[dir_ct]][i], fixed = TRUE)
tcr_file = finfo[[file_ct]][i]
tcr_dat  = fread(file.path(data_dir, tcr_dir, tcr_file))
dim(tcr_dat)
tcr_dat[1:2,]
cell = tcr_dat$V1
gex_dir  = gsub(".zip", "", finfo$gex_dir[i], fixed = TRUE)
gex_file = finfo$gex_file[i]
gex = fread(file.path(data_dir, gex_dir, gex_file))
dim(gex)
gex[1:3,1:2]
stopifnot(all(cell %in% gex$V1))
tcr_dat[,':='(individual=finfo$individual[i],
time_point=finfo$sampling_time_point[i])]
cell_info = rbind(cell_info,
tcr_dat[,.(V1, chain_pairing, clonotype,
clonotype_size, clonal_expansion,
individual, time_point)])
gex_idx = match(cell, gex$V1)
if(i == 1){
gex_names = names(gex)
}else{
stopifnot(all(gex_names == names(gex)))
}
gex_i = gex[gex_idx,]
gex_i[,V1:=NULL]
stopifnot(all(genes2check %in% names(gex_i)))
gex_sub = rbind(gex_sub, data.matrix(gex_i[,..genes2check]))
gex_i = as(data.matrix(gex_i), "sparseMatrix")
gex_dat = rbind(gex_dat, gex_i)
}
cell_type = "cd4"
for(i in 1:nrow(finfo)){
cat(i, date(), "\n")
dir_ct  = paste0(cell_type, "_tcr_dir")
file_ct = paste0(cell_type, "_tcr_file")
tcr_dir  = gsub(".zip", "", finfo[[dir_ct]][i], fixed = TRUE)
tcr_file = finfo[[file_ct]][i]
tcr_dat  = fread(file.path(data_dir, tcr_dir, tcr_file))
dim(tcr_dat)
tcr_dat[1:2,]
cell = tcr_dat$V1
gex_dir  = gsub(".zip", "", finfo$gex_dir[i], fixed = TRUE)
gex_file = finfo$gex_file[i]
gex = fread(file.path(data_dir, gex_dir, gex_file))
dim(gex)
gex[1:3,1:2]
stopifnot(all(cell %in% gex$V1))
tcr_dat[,':='(individual=finfo$individual[i],
time_point=finfo$sampling_time_point[i])]
cell_info = rbind(cell_info,
tcr_dat[,.(V1, chain_pairing, clonotype,
clonotype_size, clonal_expansion,
individual, time_point)])
gex_idx = match(cell, gex$V1)
if(i == 1){
gex_names = names(gex)
}else{
stopifnot(all(gex_names == names(gex)))
}
gex_i = gex[gex_idx,]
gex_i[,V1:=NULL]
stopifnot(all(genes2check %in% names(gex_i)))
gex_sub = rbind(gex_sub, data.matrix(gex_i[,..genes2check]))
gex_i = as(data.matrix(gex_i), "sparseMatrix")
gex_dat = rbind(gex_dat, gex_i)
}
